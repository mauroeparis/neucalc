{"version":3,"sources":["App.jsx","serviceWorker.js","index.jsx"],"names":["App","useState","keyDown","setKeyDown","equation","setEquation","error","setError","noColorButtonStyle","numButtonStyle","val","SecButtonStyle","opButtonStyle","handleUserKeyDown","useCallback","event","key","preventDefault","evaluate","handleUserKeyUp","useEffect","window","addEventListener","removeEventListener","CalcButton","funClass","addStyle","customVal","className","onMouseDown","onMouseUp","onChange","e","target","value","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.9c4ca6ab.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { evaluate } from 'mathjs';\n\nimport './css/App.css';\n\nfunction App() {\n  const [keyDown, setKeyDown] = useState();\n  const [equation, setEquation] = useState(\"0\");\n  const [error, setError] = useState(false);\n\n  const noColorButtonStyle = `\n    rounded-lg\n    w-16 h-16 mx-3 md:mx-4\n    focus:outline-none\n    text-xl font-medium\n  `;\n\n  const numButtonStyle = val => {\n    return `\n      ${val === keyDown ? \"neo-button-pressed\" : \"neo-button\"}\n      ${noColorButtonStyle} text-gray-600\n    `\n  };\n  const SecButtonStyle = val => {\n    return `\n      ${val === keyDown ? \"neo-button-pressed\" : \"neo-button\"}\n      ${noColorButtonStyle} text-gray-500\n    `\n  };\n  const opButtonStyle = val => {\n    return `\n      ${val === keyDown ? \"neo-button-pressed-op\" : \"neo-button\"}\n      ${noColorButtonStyle} bg-orange-500 text-gray-100\n    `\n  };\n  const eqButtonStyle = val => {\n    return `\n      ${val === keyDown ? \"neo-button-pressed-eq\" : \"neo-button\"}\n      ${noColorButtonStyle} bg-blue-500 text-gray-100\n    `\n  };\n\n  const handleUserKeyDown = useCallback(event => {\n    const { key } = event;\n    setKeyDown(key);\n    setError(false);\n    if (key === \"=\" || key === \"Enter\") {\n      event.preventDefault();\n      try {\n        setEquation(evaluate(equation));\n      } catch {\n        setError(true);\n      }\n    }\n  }, [equation]);\n\n  const handleUserKeyUp = useCallback(event => {\n    setKeyDown(null);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleUserKeyDown);\n    window.addEventListener('keyup', handleUserKeyUp);\n\n    return () => {\n      window.removeEventListener('keydown', handleUserKeyDown);\n      window.removeEventListener('keyup', handleUserKeyUp);\n    };\n  }, [handleUserKeyDown, handleUserKeyUp]);\n\n  const CalcButton = ({ funClass, addStyle, val, customVal }) => {\n    return (\n      <button\n        className={`${funClass(val)} ${addStyle}`}\n        onMouseDown={() => {\n          setKeyDown(val);\n          if (val === \"=\") {\n            try {\n              setEquation(evaluate(equation));\n            } catch {\n              setError(true);\n            }\n          } else if (val === \"AC\") {\n            setEquation(0);\n          } else if (val === \"+/-\") {\n            try {\n              setEquation(evaluate(`-1 * (${equation})`));\n            } catch {\n              setError(true);\n            }\n          } else if (equation === \"0\") {\n            setEquation(val);\n          } else {\n            setEquation(equation + val);\n          }          \n        }}\n        onMouseUp={() => setKeyDown(null)}\n      >\n        {customVal ? customVal : val}\n      </button>\n    )\n  }\n\n  return (\n    <div className=\"flex bg-gray-300 w-full h-screen\">\n      <div\n        className=\"hidden sm:flex flex-col mt-6 md:mt-12 lg:mt-24 px-6 mx-auto\"\n      >\n        <div className=\"flex justify-center mx-6\">\n          <textarea\n            className={`\n              neo-display\n              self-center\n              bg-gray-300 text-gray-700\n              text-3xl font-semibold\n              focus:outline-none\n              w-full h-16 sm:h-40 pl-3 md:pl-6 pt-3 md:pt-6\n              ${error ? \"text-red-700\" : \"\"}\n            `}\n            onChange={e => setEquation(e.target.value)}\n            value={equation}\n          >\n          </textarea>\n        </div>\n        <div className=\"flex justify-center\">\n          <div className=\"flex flex-col\">\n            <div className=\"flex mt-5 md:mt-6\">\n              <CalcButton funClass={SecButtonStyle} val={\"AC\"} />\n              <CalcButton funClass={SecButtonStyle} val={\"+/-\"} />\n              <CalcButton funClass={SecButtonStyle} val={\"%\"} />\n            </div>\n\n            <div className=\"flex mt-5 md:mt-6\">\n              <CalcButton funClass={numButtonStyle} val={\"7\"} />\n              <CalcButton funClass={numButtonStyle} val={\"8\"} />\n              <CalcButton funClass={numButtonStyle} val={\"9\"} />\n            </div>\n\n            <div className=\"flex mt-5 md:mt-6\">\n              <CalcButton funClass={numButtonStyle} val={\"4\"} />\n              <CalcButton funClass={numButtonStyle} val={\"5\"} />\n              <CalcButton funClass={numButtonStyle} val={\"6\"} />\n            </div>\n\n            <div className=\"flex mt-5 md:mt-6\">\n              <CalcButton funClass={numButtonStyle} val={\"1\"} />\n              <CalcButton funClass={numButtonStyle} val={\"2\"} />\n              <CalcButton funClass={numButtonStyle} val={\"3\"} />\n            </div>\n\n            <div className=\"flex mt-5 md:mt-6\">\n              <CalcButton funClass={numButtonStyle} val={\"0\"} />\n              <CalcButton funClass={numButtonStyle} val={\".\"} />\n              <CalcButton funClass={eqButtonStyle} val={\"=\"}\n              />\n            </div>\n          </div>\n\n          <div className=\"flex flex-col\">\n            <CalcButton\n              funClass={opButtonStyle}\n              addStyle={\"mt-5 md:mt-6\"}\n              val={\"/\"} customVal={\"รท\"}\n            />\n            <CalcButton\n              funClass={opButtonStyle}\n              addStyle={\"mt-5 md:mt-6\"}\n              val={\"*\"} customVal={\"ร\"}\n            />\n            <CalcButton\n              funClass={opButtonStyle}\n              addStyle={\"mt-5 md:mt-6\"}\n              val={\"-\"}\n            />\n            <CalcButton\n              funClass={opButtonStyle}\n              addStyle={\"h-40 mt-5 md:mt-6\"}\n              val={\"+\"}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"sm:hidden p-10\">\n        I'm sorry to inform you that this calculator is not available for\n        small devices\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './css/tailwind.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}